
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // STUDENTS
    match /students/{studentId} {
      // Allow student to create their own doc, and read/write it after creation
      // Allow any authenticated user to create (for registration)
      allow create: if request.auth != null;
      allow read, update: if request.auth != null && request.auth.uid == studentId;
      // Admins and teachers can read/write student data
      allow read, write: if isAdmin() || isTeacher();
    }

    // TEACHERS
    match /teachers/{teacherId} {
      allow read, write: if request.auth != null && request.auth.uid == teacherId;
      // Admins can read/write teacher data
      allow read, write: if isAdmin();
    }

    // ADMINS
    match /admins/{adminId} {
      allow read, write: if request.auth != null && request.auth.uid == adminId;
       // Other admins can manage admins
      allow read, write: if isAdmin();
    }
    
    // HOSTS
    match /hosts/{hostId} {
      allow read, write: if request.auth != null && request.auth.uid == hostId;
    }

    // Batch access — teachers & admins only
    match /batches/{batchId} {
      allow read, write: if isTeacher() || isAdmin();
    }
    match /batches/{document=**} {
      allow list: if isTeacher() || isAdmin();
    }


    // Timetable access — teachers & admins can write, students can read
    match /timetables/{timetableId} {
      allow read: if isTeacher() || isAdmin() || isStudent();
      allow write: if isTeacher() || isAdmin();
    }

    // Attendance Records
    match /attendanceRecords/{recordId} {
        allow read: if isAdmin() || isTeacher();
        // Students can read their OWN attendance records
        allow read: if isStudent() && resource.data.studentId == request.auth.uid;
        allow write: if isAdmin();
    }

    // Utility functions to check role by seeing if a doc for the user exists in that collection
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    function isTeacher() {
      return exists(/databases/$(database)/documents/teachers/$(request.auth.uid));
    }

    function isStudent() {
      return exists(/databases/$(database)/documents/students/$(request.auth.uid));
    }
  }
}
